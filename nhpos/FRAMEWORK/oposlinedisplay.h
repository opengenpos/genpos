// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// COPOSLineDisplay wrapper class

class COPOSLineDisplay : public CWnd
{
protected:
	DECLARE_DYNCREATE(COPOSLineDisplay)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xccb90102, 0xb81e, 0x11d2, { 0xab, 0x74, 0x0, 0x40, 0x5, 0x4c, 0x37, 0x19 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	BOOL  m_bUnicodeSupport;

// Operations
public:
	long GetOpenResult();
	CString GetCheckHealthText();
	BOOL GetClaimed();
	BOOL GetDeviceEnabled();
	void SetDeviceEnabled(BOOL bNewValue);
	BOOL GetFreezeEvents();
	void SetFreezeEvents(BOOL bNewValue);
	long GetResultCode();
	long GetResultCodeExtended();
	long GetState();
	CString GetControlObjectDescription();
	long GetControlObjectVersion();
	CString GetServiceObjectDescription();
	long GetServiceObjectVersion();
	CString GetDeviceDescription();
	CString GetDeviceName();
	long CheckHealth(long Level);
	long ClaimDevice(long Timeout);
	long Close();
	long DirectIO(long Command, long* pData, BSTR* pString);
	long Open(LPCTSTR DeviceName);
	long ReleaseDevice();
	long GetCapBlink();
	BOOL GetCapBrightness();
	long GetCapCharacterSet();
	BOOL GetCapDescriptors();
	BOOL GetCapHMarquee();
	BOOL GetCapICharWait();
	BOOL GetCapVMarquee();
	long GetCharacterSet();
	void SetCharacterSet(long nNewValue);
	CString GetCharacterSetList();
	long GetColumns();
	long GetCurrentWindow();
	void SetCurrentWindow(long nNewValue);
	long GetCursorColumn();
	void SetCursorColumn(long nNewValue);
	long GetCursorRow();
	void SetCursorRow(long nNewValue);
	BOOL GetCursorUpdate();
	void SetCursorUpdate(BOOL bNewValue);
	long GetDeviceBrightness();
	void SetDeviceBrightness(long nNewValue);
	long GetDeviceColumns();
	long GetDeviceDescriptors();
	long GetDeviceRows();
	long GetDeviceWindows();
	long GetInterCharacterWait();
	void SetInterCharacterWait(long nNewValue);
	long GetMarqueeFormat();
	void SetMarqueeFormat(long nNewValue);
	long GetMarqueeRepeatWait();
	void SetMarqueeRepeatWait(long nNewValue);
	long GetMarqueeType();
	void SetMarqueeType(long nNewValue);
	long GetMarqueeUnitWait();
	void SetMarqueeUnitWait(long nNewValue);
	long GetRows();
	long ClearDescriptors();
	long ClearText();
	long CreateWin(long ViewportRow, long ViewportColumn, long ViewportHeight, long ViewportWidth, long WindowHeight, long WindowWidth);
	long DestroyWin();
	long DisplayText(LPCTSTR Data, long Attribute);
	long DisplayTextAt(long Row, long Column, LPCTSTR Data, long Attribute);
	long RefreshWindow(long Window);
	long ScrollText(long Direction, long Units);
	long SetDescriptor(long Descriptor, long Attribute);
	long GetBinaryConversion();
	void SetBinaryConversion(long nNewValue);
	long GetCapPowerReporting();
	long GetPowerNotify();
	void SetPowerNotify(long nNewValue);
	long GetPowerState();
	long GetBlinkRate();
	void SetBlinkRate(long nNewValue);
	BOOL GetCapBlinkRate();
	long GetCapCursorType();
	BOOL GetCapCustomGlyph();
	long GetCapReadBack();
	long GetCapReverse();
	long GetCursorType();
	void SetCursorType(long nNewValue);
	CString GetCustomGlyphList();
	long GetGlyphHeight();
	long GetGlyphWidth();
	long DefineGlyph(long GlyphCode, LPCTSTR Glyph);
	long ReadCharacterAtCursor(long* pChar);
	BOOL GetCapBitmap();
	BOOL GetCapMapCharacterSet();
	BOOL GetCapScreenMode();
	BOOL GetMapCharacterSet();
	void SetMapCharacterSet(BOOL bNewValue);
	long GetMaximumX();
	long GetMaximumY();
	long GetScreenMode();
	void SetScreenMode(long nNewValue);
	CString GetScreenModeList();
	long DisplayBitmap(LPCTSTR FileName, long Width, long AlignmentX, long AlignmentY);
	long SetBitmap(long BitmapNumber, LPCTSTR FileName, long Width, long AlignmentX, long AlignmentY);
	BOOL GetCapStatisticsReporting();
	BOOL GetCapUpdateStatistics();
	long ResetStatistics(LPCTSTR StatisticsBuffer);
	long RetrieveStatistics(BSTR* pStatisticsBuffer);
	long UpdateStatistics(LPCTSTR StatisticsBuffer);
};
