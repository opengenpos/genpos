/*========================================================================*\
||                                                                        ||
||        *=*=*=*=*=*=*=*=*                                               ||
||        *  NCR 2170     *             NCR Corporation, E&M OISO         ||
||     @  *=*=*=*=*=*=*=*=*  0             (C) Copyright, 1992            ||
||    <|\/~               ~\/|>                                           ||
||   _/^\_                 _/^\_                Release 1.0               ||
||                                                                        ||
\*========================================================================*/
/*------------------------------------------------------------------------*\
:  Title              : Device I/O Configuration Header                    :
:  Category           : Device Independent I/O, 2170 XINU Operating System :
:  Program Name       : CONF.H                                             :
:  ----------------------------------------------------------------------- :
:  Description                                                             :
:       This file is generated by XINU Configurator, CONFIG.EXE.           :
:       It contains,                                                       :
:                                                                          :
:       1. Definition of device table entry                                :
:       2. Device name defintions                                          :
:       3. Ptototypes of I/O routines                                      :
:       4. Symbolic definitions                                            :
:                                                                          :
:       To modify this file, edit "2170conf" and execute "config.exe". :
:  ----------------------------------------------------------------------- :
:  Compile            : MS-C Ver. 6.00A by Microsoft Corp.                 :
:  Memory Model       : Compact Model                                      :
:  Compile Option     : /c /ACw /Za /W4 /FPa /Gs                           :
:  ----------------------------------------------------------------------- :
:  Update Histories                                                        :
:                       GENERATED FILE: DO NOT EDIT                        :
\*------------------------------------------------------------------------*/

#define	NULLPTR	(char *)0

/* Device table declarations */
typedef struct	devsw	{		/* device table entry		*/
	short	dvnum;
	char	dvnam[8];
	short	(*dvinit)(struct devsw *);
	short	(*dvopen)(struct devsw *,...);
	short	(*dvclose)(struct devsw *);
	short	(*dvread)(struct devsw *, void *, short);
	short	(*dvwrite)(struct devsw *, void *, short);
	short	(*dvseek)(struct devsw *, unsigned long, ...);
	short	(*dvgetc)(struct devsw *);
	short	(*dvputc)(struct devsw *, char);
	short	(*dvcntl)(struct devsw *, short, ...);
	short	dvport;
	short	dvivec;
	short	dvovec;
	void    (*dviint)(short);
	void    (*dvoint)(short);
	void	*dvioblk;
	short	dvminor;
} DEVICE;

extern	struct	devsw devtab[];		/* one entry per device		*/

/* Device name definitions */

#define	COM	0		/* type sio	*/
#define	ASY	1		/* type asy	*/
#define	YAM	2		/* type yam	*/
#define	INTERNET	3		/* type net	*/

/* Control block sizes */

#define	Nsio	1
#define	Nasy	1
#define	Nyam	1
#define	Nnet	1
#define	Ndg	1

#define	NDEVS	5

/* Prototypes of I/O routines */

short	ioerr(void);
short	ionull(void);
short	SioInit(DEVICE *);
short	SioOpen(DEVICE *,...);
short	SioClose(DEVICE *);
short	SioRead(DEVICE *, void *, short);
short	SioWrite(DEVICE *, void *, short);
short	SioCntl(DEVICE *, short, ...);
short	AsyInit(DEVICE *);
short	AsyOpen(DEVICE *,...);
short	AsyClose(DEVICE *);
short	AsyRead(DEVICE *, void *, short);
short	AsyWrite(DEVICE *, void *, short);
short	AsyCntl(DEVICE *, short, ...);
short	YamInit(DEVICE *);
short	YamOpen(DEVICE *,...);
short	YamClose(DEVICE *);
short	YamRead(DEVICE *, void *, short);
short	YamWrite(DEVICE *, void *, short);
short	YamCntl(DEVICE *, short, ...);
short	NetInit(DEVICE *);
short	NetOpen(DEVICE *,...);
short	NetCntl(DEVICE *, short, ...);
short	DgInit(DEVICE *);
short	DgClose(DEVICE *);
short	DgRead(DEVICE *, void *, short);
short	DgWrite(DEVICE *, void *, short);
short	DgCntl(DEVICE *, short, ...);

